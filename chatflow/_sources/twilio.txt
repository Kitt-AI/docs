.. _twilio:

======================
Twilio Bot Tutorials
======================

.. Bootstrap specific class labels

.. role:: text-success
.. role:: text-primary
.. role:: text-info
.. role:: text-warning
.. role:: text-danger

.. role:: bg-success
.. role:: bg-primary
.. role:: bg-info
.. role:: bg-warning
.. role:: bg-danger

Introduction
------------

Twilio In and Twilio Out nodes allow your apps to receive and send SMS messages (usually in that order).

Preparing Twilio account
========================

You can skip this section if you already have a Twilio account and/or know how to set it up.

1. If you don't have a Twilio account, you can `sign up for one <https://www.twilio.com/try-twilio>`_. Trial accounts are free, you don't have to provide any payment details.

.. note::
   It's a good idea to provide a real phone number when registering a new account (and confirm that number), as only confirmed
   phone numbers can be used to send/receive SMS messages to/from Twilio services in trial accounts.

2. After finishing the registration, you will have to `"buy" <https://www.twilio.com/console/phone-numbers/search>`_ a phone number.
   The first phone number in trial accounts (at time of writing) is/was free.

.. note::
    Make sure you search for phone numbers in/close to your area and with SMS capabilities enabled.

3. Don't close the browser window/tab with the Twilio console, as you will need it later.


A simple Backwards-echo Bot
---------------------------

1. Start by opening the ChatFlow application list and add a new application. Press the "Create new App" button.

.. image:: _static/img/twilio/twilio-new-app.png
   :align: center

2. Enter a name and press "Create".

.. image:: _static/img/twilio/twilio-create-app.png
   :align: center

3. Click on the application name on the list to edit it.

.. image:: _static/img/twilio/twilio-edit-app.png
    :align: center

4. To make your app nice and tidy, you can enable grid in the Settings/view menu.

.. image:: _static/img/twilio/twilio-snap-grid.png
    :align: center

5. Find Twilio In and Twilio Out nodes in the palette (left side), add them to the flow.

.. image:: _static/img/twilio/twilio-palette.png
    :align: center

6. Find the "function" node in the palette and add it to the flow too.
7. Connect the "Twilio In" node output to the function node input and the function node output
   to the "Twilio Out" input, so your flow looks like this:

.. image:: _static/img/twilio/twilio-added-connected.png
   :align: center

8. Double click on the "Twilio in" node, and click on the displayed "Twilio receiving url" to copy it to your clipboard (highlighted in yellow).

.. image:: _static/img/twilio/twilio-receiving-url.png
   :align: center

9. Switch to the Twilio console and display your Phone numbers list, .

.. image:: _static/img/twilio/twilio-cp-phone-numbers.png
   :align: center

10. Find the phone number you bought and click on it to edit it's settings.

.. image:: _static/img/twilio/twilio-cp-phone-list.png
   :align: center

11. Paste the address you copied in from the "Twilio in node" in the field labeled "A message comes in" and click the "Save" button.

.. image:: _static/img/twilio/twilio-cp-add-webhook.png
   :align: center

12. Go to the Twilio console dashboard (the main screen) to display your Account SID and Auth Token.
    You have to click the padlock icon to make Auth Token visible
    (the SID and token displayed in this tutorial are fake, so don't try to use them ;) ).

.. image:: _static/img/twilio/twilio-cp-credentials.png
   :align: center

13. Switch to the ChatFlow editor and double click on the "Twilio Out" node.
    Copy Account SID and Auth Token from Twilio dashboard to this form.
14. Enable "Respond mode" and click "OK".

.. image:: _static/img/twilio/twilio-out-credentials.png
   :align: center

"Respond mode" is a quick way to enable your app to respond to incoming SMS messages
(received by a Twilio In node) without having to write any extra code.
When it's enabled and you don't redefine ``msg.twilio.from``/``to`` values,
then those values are used in reverse, so when you use a Twilio Out node, the recipient phone number will be
read from ``msg.twilio.in`` (and sender phone number will be read from ``msg.twilio.from`` accordingly).
This feature also allows you to use one "Twilio Out" node with multiple "Twilio In" nodes.

15. Double click on the function node you added and fill it like in the example below (enter node name and function body):

.. code-block:: javascript

 msg.payload = msg.payload.split('').reverse().join('');

 return msg;

.. image:: _static/img/twilio/twilio-fn-reverse.png
   :align: center


15. Hit the "Deploy" button. Now your app is running and you can test it.

.. image:: _static/img/twilio/twilio-deploy.png
   :align: center

16. Send a text message (SMS) to the phone number you bought. Your app should respond in seconds with a message containing the text you sent, but reversed.

Extra steps
===========
Here we'll add some debugging functionality to your application.

16. Find and add a debug node to the flow, connect it's input to the "Twilio in" output.

.. image:: _static/img/twilio/twilio-debug-added.png
   :align: center

17. Double click the debug node you added and set it up to log "twilio" property of "msg".

.. image:: _static/img/twilio/twilio-debug-edit.png
   :align: center

18. Activate the debug panel and send another text message. Message details should be shown in the debug panel.
    You can read about those details in `Twilio documentation <https://www.twilio.com/docs/api/twiml/sms/twilio_request>`_.

.. image:: _static/img/twilio/twilio-debug-sms.png
   :align: center

You can download the whole aplication `here <_static/json/twilio-echo-bot.json>`_.
You only have to setup Twilio In/Out nodes manually.

A more advanced Twilio bot with session/router support
------------------------------------------------------

1. Create a new app and add the following nodes:

- Twilio In
- Twilio Out
- router
- 3x enter
- 3x state
- 1x function

2. Connect added nodes so the flow looks like this:

.. image:: _static/img/twilio/twilio2-adv-connected.png
   :align: center

3. Set up Twilio In/Out nodes (the previous tutorial shows how to do it).
4. Edit the first "enter" node, name it "start", set it as the initial state and remove the condition:

.. image:: _static/img/twilio/twilio2-initial.png
   :align: center

You can leave the first state node unchanged.

5. Edit the second "enter" node, name it "add counter", and set it up to accept ``add`` in the payload property.

.. image:: _static/img/twilio/twilio2-add-counter.png
   :align: center

6. Edit the function node connected to the "add counter" node, name it "increase counter"
   and add the following code to the function body

.. code-block:: javascript

 msg.kitt.counter = (msg.kitt.counter || 0) + 1;

.. image:: _static/img/twilio/twilio2-inc-counter.png
   :align: center

7. Edit the second state node (the one connected to the function node you just edited),
name it "print counter" and replace the commented out code with the following code:

.. code-block:: javascript

 msg.kitt._responses = [msg.kitt.counter];

.. image:: _static/img/twilio/twilio2-print-counter.png
   :align: center

8. Edit the third enter node, name it "end", and set it up to accept ``bye`` in the payload property.

.. image:: _static/img/twilio/twilio2-state-end.png
   :align: center

9. Edit the third state node, name it "bye", set "Output text" to ``Bye bye.``, leave the code as is.
   Make sure you check the "Dialogue ends here" option.

.. image:: _static/img/twilio/twilio2-state-bye.png
   :align: center

10. The "Twilio In" node sets up session variables automatically, so you don't have to edit the router node.
    However, as messages from Twilio have no direct support for "sessions", so you may want to tune the "idle" session length manually.

11. Now you can deploy the application. The finshed flow should look like this:

.. image:: _static/img/twilio/twilio2-finished.png
   :align: center

Now by sending "add" message to your Twilio phone number you increase the counter (each user has own counter).
By sending "bye" message, you end the conversation (and reset/kill the counter).

You can download the whole aplication `here <_static/json/twilio-router-bot.json>`_.
You only have to setup Twilio In/Out nodes manually.
